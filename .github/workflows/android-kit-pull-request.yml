name: "Android Kit Pull Request Checks"

on:
  workflow_call:

jobs:
  pr-branch-target-gitflow:
    name: "Check PR for correct target branch"
    uses: mParticle/mparticle-workflows/.github/workflows/pr-branch-target-gitflow.yml@main
  pr-branch-check-name:
    name: "Check PR for semantic branch name"
    uses: mParticle/mparticle-workflows/.github/workflows/pr-branch-check-name.yml@main
  pr-title-check:
    name: "Check PR for semantic title"
    uses: mParticle/mparticle-workflows/.github/workflows/pr-title-check.yml@main

  unit-tests:
    name: "Unit Tests"
    needs: [ pr-branch-target-gitflow, pr-branch-check-name, pr-title-check ]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: kit
          ref: ${{github.head_ref}}
      - name: "Checkout Core"
        uses: actions/checkout@v3
        with:
          repository: mParticle/android-sdk
          fetch-depth: 0
          path: core
          ref: development
      - name: "Install JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
      - name: "Build Core"
        working-directory: core
        run: ./gradlew publishLocal
      - name: "Get Build Version"
        id: core-version
        run: |
          ANDROID_CORE_DIR=`find  ~/.m2 -type d -name android-core`;
          echo "android-core m2 directory:"
          echo $ANDROID_CORE_DIR;
          VERSION_DIR=`find $ANDROID_CORE_DIR -type d -name *-SNAPSHOT`;
          echo "android-core m2 version directory:"
          echo $VERSION_DIR;
          VERSION=`basename $VERSION_DIR`;
          echo "android-core m2 version:";
          echo $VERSION;
          echo "::set-output name=coreVersion::$VERSION"
      - name: "Clean and Run Unit Tests"
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          build-root-directory: kit
          arguments: clean assemble test -Pversion=${{ steps.core-version.outputs.coreVersion }}
      - name: "Archive Test Results"
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: "unit-tests-results"
          path: ./**/build/reports/**

  lint:
    name: "Lint Checks"
    needs: [ pr-branch-confirmation ]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: kit
          ref: ${{github.head_ref}}
      - name: "Checkout Core"
        uses: actions/checkout@v3
        with:
          repository: mParticle/android-sdk
          fetch-depth: 0
          path: core
          ref: development
      - name: "Install JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
      - name: "Build Core"
        working-directory: core
        run: ./gradlew publishLocal
      - name: "Get Build Version"
        id: core-version
        run: |
          ANDROID_CORE_DIR=`find  ~/.m2 -type d -name android-core`;
          echo "android-core m2 directory:"
          echo $ANDROID_CORE_DIR;
          VERSION_DIR=`find $ANDROID_CORE_DIR -type d -name *-SNAPSHOT`;
          echo "android-core m2 version directory:"
          echo $VERSION_DIR;
          VERSION=`basename $VERSION_DIR`;
          echo "android-core m2 version:";
          echo $VERSION;
          echo "::set-output name=coreVersion::$VERSION"
      - name: "Run Lint Checks"
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          build-root-directory: kit
          arguments: lint -Pversion=${{ steps.core-version.outputs.coreVersion }}
      - name: "Archive Lint Results"
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: "lint-checks-results"
          path: ./**/build/reports/**

  kotlin-lint:
    name: "Kotlin Lint Checks"
    needs: [ pr-branch-confirmation ]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: kit
          ref: ${{github.head_ref}}
      - name: "Checkout Core"
        uses: actions/checkout@v3
        with:
          repository: mParticle/android-sdk
          fetch-depth: 0
          path: core
          ref: development
      - name: "Install JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
      - name: "Build Core"
        working-directory: core
        run: ./gradlew publishLocal
      - name: "Get Build Version"
        id: core-version
        run: |
          ANDROID_CORE_DIR=`find  ~/.m2 -type d -name android-core`;
          echo "android-core m2 directory:"
          echo $ANDROID_CORE_DIR;
          VERSION_DIR=`find $ANDROID_CORE_DIR -type d -name *-SNAPSHOT`;
          echo "android-core m2 version directory:"
          echo $VERSION_DIR;
          VERSION=`basename $VERSION_DIR`;
          echo "android-core m2 version:";
          echo $VERSION;
          echo "::set-output name=coreVersion::$VERSION"
      - name: "Run Kotlin Lint Checks"
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          build-root-directory: kit
          arguments: ktlintCheck -Pversion=${{ steps.core-version.outputs.coreVersion }}
      - name: "Archive Kotlin Lint Results"
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: "kotlin-lint-checks-results"
          path: ./**/build/reports/**

  automerge-dependabot:
    name: "Save PR Number for Dependabot Automerge"
    needs: [ unit-tests, lint, kotlin-lint ]
    uses: mParticle/mparticle-workflows/.github/workflows/dependabot-save-pr-number.yml@main
