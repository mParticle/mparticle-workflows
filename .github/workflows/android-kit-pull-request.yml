name: "Android Kit Pull Request Checks"
on: 
  workflow_call:
jobs:
  pr-branch-confirmation:
      name: "Confirm that target branch for PR is main or master"
      runs-on: ubuntu-18.04
      steps:
          - name: "echo PR target branch"
            run: |
                echo ${{ github.event.pull_request.base.ref }}
          - name: "Set PR target branch validity"
            id: is-valid
            if: >
                startsWith(github.event.pull_request.base.ref, 'master')||
                startsWith(github.event.pull_request.base.ref, 'main') ||
                startsWith(github.event.pull_request.base.ref, 'build/')
            run: |
                OUTPUT=true
                echo "::set-output name=isValid::$OUTPUT"
          - name: "Echo isValid"
            run: |
                echo ${{ steps.is-valid.outputs.isValid }}
          - name: "PR target branch is valid"
            if: ${{steps.is-valid.outputs.isValid == 'true'}}
            run: |
                echo 'Pull request target branch is valid.'
                echo ${{ steps.is-valid.outputs.isValid }}
          - name: "PR target branch is invalid"
            if: ${{ steps.is-valid.outputs.isValid != 'true'}}
            run: |
                echo ${{ steps.is-valid.outputs.isValid }}
                echo 'Pull request target branch is not valid.'
                exit 1
  unit-tests:
    name: "Unit Tests"
    needs: [ pr-branch-confirmation ]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: kit
          ref: ${{github.head_ref}}
      - name: "Checkout Core"
        uses: actions/checkout@v2
        with:
          repository: mParticle/android-sdk
          fetch-depth: 0
          path: core
          ref: development
      - name: "Install JDK 11"
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: "Build Core"
        working-directory: core
        run: ./gradlew publishLocal
      - name: "Get Build Version"
        id: core-version
        run: |
          ANDROID_CORE_DIR=`find  ~/.m2 -type d -name android-core`;
          echo "android-core m2 directory:"
          echo $ANDROID_CORE_DIR;
          VERSION_DIR=`find $ANDROID_CORE_DIR -type d -name *-SNAPSHOT`;
          echo "android-core m2 version directory:"
          echo $VERSION_DIR;
          VERSION=`basename $VERSION_DIR`;
          echo "android-core m2 version:";
          echo $VERSION;
          echo "::set-output name=coreVersion::$VERSION"
      - name: "Clean and Run Unit Tests"
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.3.3
          build-root-directory: kit
          arguments: clean assemble test -Pversion=${{ steps.core-version.outputs.coreVersion }}
      - name: "Archive Test Results"
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: "unit-tests-results"
          path: ./**/build/reports/**
  lint:
    name: "Lint Checks"
    needs: [ pr-branch-confirmation ]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: kit
          ref: ${{github.head_ref}}
      - name: "Checkout Core"
        uses: actions/checkout@v2
        with:
          repository: mParticle/android-sdk
          fetch-depth: 0
          path: core
          ref: development
      - name: "Install JDK 11"
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: "Build Core"
        working-directory: core
        run: ./gradlew publishLocal
      - name: "Get Build Version"
        id: core-version
        run: |
          ANDROID_CORE_DIR=`find  ~/.m2 -type d -name android-core`;
          echo "android-core m2 directory:"
          echo $ANDROID_CORE_DIR;
          VERSION_DIR=`find $ANDROID_CORE_DIR -type d -name *-SNAPSHOT`;
          echo "android-core m2 version directory:"
          echo $VERSION_DIR;
          VERSION=`basename $VERSION_DIR`;
          echo "android-core m2 version:";
          echo $VERSION;
          echo "::set-output name=coreVersion::$VERSION"
      - name: "Run Lint Checks"
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.3.3
          build-root-directory: kit
          arguments: lint -Pversion=${{ steps.core-version.outputs.coreVersion }}
      - name: "Archive Lint Results"
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: "lint-checks-results"
          path: ./**/build/reports/**
  automerge-dependabot:
    name: "Save PR Number for Dependabot Automerge"
    needs: [ unit-tests, lint ]
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout PR branch"
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
      - name: "Save Pull Request Number"
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
      - uses: actions/upload-artifact@v2
        with:
          name: pr
          path: pr/