name: "Android Kit Regression Checks"

on:
  workflow_call:
    inputs:
      dryRun:
        description: "Do a dry run to preview instead of a real release [true/false]"
        required: false
        default: "true"
        type: string
      branch_name:
        description: "branch name to run tests on"
        required: false
        default: ${{ github.head_ref }}
        type: string

jobs:

  unit-tests-maven:
    name: "Unit Tests Maven"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Install JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
          cache: "gradle"
      - name: Clean and Run Unit Tests
        continue-on-error: true
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: clean assemble test
      - name: "Archive Test Results"
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: "unit-tests-results-maven"
          path: ./**/build/reports/**

  unit-tests-development:
    name: "Unit Tests Development"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: kit
          ref: ${{ inputs.branch_name }}
      - name: "Checkout Core"
        uses: actions/checkout@v3
        with:
          repository: mParticle/android-sdk
          fetch-depth: 0
          path: core
          ref: development
      - name: "Install JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
          cache: "gradle"
      - name: "Build Core"
        working-directory: core
        run: ./gradlew publishLocal
      - name: "Get Build Version"
        id: core-version
        run: |
          ANDROID_CORE_DIR=`find  ~/.m2 -type d -name android-core`;
          echo "android-core m2 directory:"
          echo $ANDROID_CORE_DIR;
          VERSION_DIR=`find $ANDROID_CORE_DIR -type d -name *-SNAPSHOT`;
          echo "android-core m2 version directory:"
          echo $VERSION_DIR;
          VERSION=`basename $VERSION_DIR`;
          echo "android-core m2 version:";
          echo $VERSION;
          echo "coreVersion=$VERSION" >> $GITHUB_OUTPUT
      - name: "Clean and Run Unit Tests"
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          build-root-directory: kit
          arguments: clean assemble test -Pversion=${{ steps.core-version.outputs.coreVersion }}
      - name: "Archive Test Results"
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: "unit-tests-results-development"
          path: ./**/build/reports/**

  lint-maven:
    name: "Lint Checks Maven"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ inputs.branch_name }}
      - name: "Install JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
          cache: "gradle"
      - name: "Run Lint"
        uses: gradle/gradle-build-action@v2
        continue-on-error: true
        with:
          gradle-version: 7.5.1
          arguments: lint
      - name: "Archive Lint Results"
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: "lint-results-maven"
          path: ./**/build/reports/**

  lint-development:
    name: "Lint Checks Development"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: kit
          ref: ${{ inputs.branch_name }}
      - name: "Checkout Core"
        uses: actions/checkout@v3
        with:
          repository: mParticle/android-sdk
          fetch-depth: 0
          path: core
          ref: development
      - name: "Install JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
          cache: "gradle"
      - name: "Build Core"
        working-directory: core
        run: ./gradlew publishLocal
      - name: "Get Build Version"
        id: core-version
        run: |
          ANDROID_CORE_DIR=`find  ~/.m2 -type d -name android-core`;
          echo "android-core m2 directory:"
          echo $ANDROID_CORE_DIR;
          VERSION_DIR=`find $ANDROID_CORE_DIR -type d -name *-SNAPSHOT`;
          echo "android-core m2 version directory:"
          echo $VERSION_DIR;
          VERSION=`basename $VERSION_DIR`;
          echo "android-core m2 version:";
          echo $VERSION;
          echo "coreVersion=$VERSION" >> $GITHUB_OUTPUT
      - name: "Clean and Run Unit Tests"
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          build-root-directory: kit
          arguments: lint -Pversion=${{ steps.core-version.outputs.coreVersion }}
      - name: "Archive Lint Results"
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: "lint-results-development"
          path: ./**/build/reports/**

  kotlin-lint-maven:
    name: "Kotlin Lint Checks Maven"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ inputs.branch_name }}
      - name: "Install JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
          cache: "gradle"
      - name: "Run Kotlin Lint"
        uses: gradle/gradle-build-action@v2
        continue-on-error: true
        with:
          gradle-version: 7.5.1
          arguments: ktlintCheck
      - name: "Archive Lint Results"
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: "kotlin-lint-results-maven"
          path: ./**/build/reports/**

  kotlin-lint-development:
    name: "Kotlin Lint Checks Development"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: kit
          ref: ${{ inputs.branch_name }}
      - name: "Checkout Core"
        uses: actions/checkout@v3
        with:
          repository: mParticle/android-sdk
          fetch-depth: 0
          path: core
          ref: development
      - name: "Install JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
          cache: "gradle"
      - name: "Build Core"
        working-directory: core
        run: ./gradlew publishLocal
      - name: "Get Build Version"
        id: core-version
        run: |
          ANDROID_CORE_DIR=`find  ~/.m2 -type d -name android-core`;
          echo "android-core m2 directory:"
          echo $ANDROID_CORE_DIR;
          VERSION_DIR=`find $ANDROID_CORE_DIR -type d -name *-SNAPSHOT`;
          echo "android-core m2 version directory:"
          echo $VERSION_DIR;
          VERSION=`basename $VERSION_DIR`;
          echo "android-core m2 version:";
          echo $VERSION;
          echo "coreVersion=$VERSION" >> $GITHUB_OUTPUT
      - name: "Clean and Run Unit Tests"
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          build-root-directory: kit
          arguments: ktlintCheck -Pversion=${{ steps.core-version.outputs.coreVersion }}
      - name: "Archive Lint Results"
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: "kotlin-lint-results-development"
          path: ./**/build/reports/**
