name: "Dependabot Automerge"
on: 
  workflow_call:
jobs:
  pr-branch-confirmation:
      name: "Confirm that target branch for PR is main or master"
      runs-on: ubuntu-18.04
      steps:
          - name: "Set PR title validity"
            id: is-valid
            if: >
                startsWith(github.event.pull_request.base.ref, 'master')||
                startsWith(github.event.pull_request.base.ref, 'main')
            run: |
                OUTPUT=true
                echo "::set-output name=isValid::$OUTPUT"
          - name: "echo isValid"
            run: |
                echo ${{ steps.is-valid.outputs.isValid }}
          - name: "PR title is valid"
            if: ${{steps.is-valid.outputs.isValid == 'true'}}
            run: |
                echo 'Pull request target branch is valid.'
                echo ${{ steps.is-valid.outputs.isValid }}
          - name: "PR title is invalid"
            if: ${{ steps.is-valid.outputs.isValid != 'true'}}
            run: |
                echo ${{ steps.is-valid.outputs.isValid }}
                echo 'Pull request target branch is not valid.'
                exit 1
  unit-tests:
    runs-on: ubuntu-latest
    name: "Unit Tests"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{github.head_ref}}
      - name: "Install JDK 11"
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Clean and Run Unit Tests
        uses: eskatos/gradle-command-action@v1
        with:
          gradle-version: 7.2
          arguments: clean assemble test
  automerge:
    name: "Automerge Dependabot PR"
    needs: [unit-tests]
    if: ${{github.actor == 'dependabot[bot]' && github.event_name == 'pull_request_target'}}
    runs-on: ubuntu-latest
    steps:
      - name: Rebase Dependabot PR
        uses: actions/github-script@v3
        with:
          script: |
            github.pulls.merge({
                owner: context.repo.owner,
                repo: context.payload.repository.name,
                pull_number: context.payload.pull_request.number,
                merge_method: 'rebase'
            });