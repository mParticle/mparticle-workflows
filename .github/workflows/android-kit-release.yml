
name: "Android Kit Release SDK"

on:
  workflow_call:
    inputs:
      dryRun:
        description: "Do a dry run to preview instead of a real release [true/false]"
        required: false
        default: "false"
        type: string

jobs:
  # SDK release is done from public main branch.
  confirm-public-repo-main-branch:
    name: "Confirm release is run from public/main branch"
    uses: mParticle/mparticle-workflows/.github/workflows/sdk-release-repo-branch-check.yml@main

  create-release-branch:
    name: "Create Release Branch"
    runs-on: ubuntu-latest
    needs: confirm-public-repo-main-branch
    env:
      GITHUB_TOKEN: ${{ secrets.MP_INTEGRATIONS_SEMANTIC_RELEASE_BOT }}
      GIT_AUTHOR_NAME: mparticle-automation
      GIT_AUTHOR_EMAIL: developers@mparticle.com
      GIT_COMMITTER_NAME: mparticle-automation
      GIT_COMMITTER_EMAIL: developers@mparticle.com
    steps:
      - name: "Checkout development branch"
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MP_INTEGRATIONS_SEMANTIC_RELEASE_BOT }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: development
      - name: "Import GPG Key"
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: "Create and push release branch"
        run: |
          git checkout -b release/${{ github.run_number }}
          git push origin release/${{ github.run_number }}

  regression-check:
    needs: create-release-branch
    name: "Run regression"
    uses: mParticle/mparticle-workflows/.github/workflows/android-kit-push.yml@main
    with:
      dryRun: ${{ inputs.dryRun }}
      branch_name: release/${{ github.run_number }}
    secrets: inherit

  sync-repository:
    name: "Sync Repository"
    needs: regression-check
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout main branch"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ github.repository }}
          token: ${{ secrets.MP_INTEGRATIONS_SEMANTIC_RELEASE_BOT }}
          ref: main
      - name: "Merge release branch into main branch"
        if: ${{ inputs.dryRun == 'false' }}
        run: |
          git pull origin release/${{ github.run_number }}
      - name: "Push release commits to main branch"
        if: ${{ inputs.dryRun == 'false' }}
        run: |
          git push origin HEAD:main
          git push origin HEAD:development
      - name: "Delete release branch"
        if: ${{ inputs.dryRun == 'false' }}
        run: |
          git push --delete origin release/${{ github.run_number }}
